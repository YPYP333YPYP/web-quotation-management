name: Deploy to GCP
on:
  push:
    branches: [ main ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up GCP SSH key and known hosts
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.GCP_SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          chmod 644 ~/.ssh/id_rsa.pub
          echo "${{ secrets.GCP_HOST_SERVER }} $(ssh-keyscan ${{ secrets.GCP_HOST_SERVER }} 2>/dev/null)" >> ~/.ssh/known_hosts

      - name: Deploy to GCP
        env:
          GCP_HOST_SERVER: ${{ secrets.GCP_HOST_SERVER }}
          GCP_HOST_NAME: ${{ secrets.GCP_HOST_NAME }}
        run: |
          # 먼저 디렉토리 생성
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_HOST_NAME }}@${{ secrets.GCP_HOST_SERVER }} "mkdir -p /home/${{ secrets.GCP_HOST_NAME }}/app"
          
          # 파일 복사
          scp -o StrictHostKeyChecking=no -r ./* ${{ secrets.GCP_HOST_NAME }}@${{ secrets.GCP_HOST_SERVER }}:/home/${{ secrets.GCP_HOST_NAME }}/app/
          
          # GCP 서버에서 실행할 명령어
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_HOST_NAME }}@${{ secrets.GCP_HOST_SERVER }} << 'EOF'
            cd /home/${{ secrets.GCP_HOST_NAME }}/app
            
            # 환경 변수 설정
            echo "${{ secrets.ENV_FILE_CONTENT }}" > .env
            chmod 600 .env
            
            # Python 업데이트
            sudo apt-get update
            sudo apt-get install -y python3-pip
            
            # Poetry 설치
            curl -sSL https://install.python-poetry.org | python3 -
            export PATH="/home/${{ secrets.GCP_HOST_NAME }}/.local/bin:$PATH"
            
            # Poetry 설정
            poetry config virtualenvs.create true
            poetry config virtualenvs.in-project true
            
            # 의존성 설치
            poetry install --no-interaction --no-root
            
            # 애플리케이션 실행 (예: FastAPI 애플리케이션)
            poetry run uvicorn main:app --host 0.0.0.0 --port 8000 --reload &
            
            # 프로세스 및 로그 확인
            ps aux | grep "uvicorn main:app"
            tail -n 20 app.log
          EOF