name: Deploy to GCP

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Poetry
        run: |
          pip install pipx
          pipx install poetry
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Update poetry lock file
        run: poetry lock --no-update

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction

      - name: Run tests
        run: poetry run pytest tests
        continue-on-error: true

      - name: Set up GCP SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to GCP
        env:
          GCP_HOST_SERVER: ${{ secrets.GCP_HOST_SERVER }}
          GCP_HOST_NAME: ${{ secrets.GCP_HOST_NAME }}
        run: |
          scp -r ./* ${{ secrets.GCP_HOST_NAME }}@${{ secrets.GCP_HOST_SERVER }}:/home/${{ secrets.GCP_HOST_NAME }}/app/
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_HOST_NAME }}@${{ secrets.GCP_HOST_SERVER }} << 'EOF'
            cd /home/${{ secrets.GCP_HOST_NAME }}/app

            # 환경 변수 설정
            echo "${{ secrets.ENV_FILE_CONTENT }}" > .env
            chmod 600 .env

            # Poetry 환경 설정 및 의존성 설치
            poetry config virtualenvs.in-project true
            poetry install --no-interaction

            # 애플리케이션 재시작
            poetry run alembic upgrade head
            pkill -f "uvicorn main:app" || true
            nohup poetry run uvicorn main:app --host 0.0.0.0 --port 8000 > app.log 2>&1 &

            # 프로세스 및 로그 확인
            ps aux | grep "uvicorn main:app"
            tail -n 20 app.log
          EOF