name: Deploy to GCP

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: '1.7.1'

    - name: Set up virtual environment with Poetry
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local

    - name: Install dependencies
      run: poetry install

    - name: Run tests
      run: poetry run pytest tests
      continue-on-error: true

    - name: Verify and create .env file
      run: |
        echo "${{ secrets.ENV_FILE_CONTENT }}" > $GITHUB_WORKSPACE/.env
        if [ ! -f $GITHUB_WORKSPACE/.env ]; then
          echo ".env file does not exist"
          exit 1
        fi

    - name: Set up GCP SSH key
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "${{ secrets.GCP_SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub

    - name: Deploy to GCP
      env:
        GCP_HOST_SERVER: ${{ secrets.GCP_HOST_SERVER }}
        GCP_HOST_NAME: ${{ secrets.GCP_HOST_NAME }}
      run: |
        # .env 파일을 서버로 전송
        ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_HOST_NAME }}@${{ secrets.GCP_HOST_SERVER }} "mkdir -p /home/${{ secrets.GCP_HOST_NAME }}/app"
        scp -o StrictHostKeyChecking=no $GITHUB_WORKSPACE/.env ${{ secrets.GCP_HOST_NAME }}@${{ secrets.GCP_HOST_SERVER }}:/home/${{ secrets.GCP_HOST_NAME }}/app/.env
        
        # 기타 파일들을 서버로 전송
        scp -o StrictHostKeyChecking=no -r $GITHUB_WORKSPACE/* ${{ secrets.GCP_HOST_NAME }}@${{ secrets.GCP_HOST_SERVER }}:/home/${{ secrets.GCP_HOST_NAME }}/app
        
        # 서버에 접속하여 명령어 실행
        ssh -o StrictHostKeyChecking=no ${{ secrets.GCP_HOST_NAME }}@${{ secrets.GCP_HOST_SERVER }} << 'EOF'
          cd /home/${{ secrets.GCP_HOST_NAME }}/app
          
          # .env 파일 권한 설정
          chmod 600 .env
        
          # Poetry 설치 및 의존성 설치
          curl -sSL https://install.python-poetry.org | python3 -
          poetry config virtualenvs.create false
          poetry lock --no-update
          poetry install
        
          # Alembic 마이그레이션 실행
          poetry run alembic upgrade head
          
          # 애플리케이션 실행
          poetry run uvicorn main:app --host 0.0.0.0 --port 8000
        EOF
